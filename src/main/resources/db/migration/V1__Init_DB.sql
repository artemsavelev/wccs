
-- TABLE
create table department (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    name varchar(255),
    primary key (id)
);

create table device (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    dimension varchar(255),
    name varchar(255),
    note varchar(2048),
    price float8 not null,
    primary key (id)
);

create table devices_departments (
    device_id int8 not null,
    department_id int8 not null
);

create table estimate (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    address varchar(2048),
    customer varchar(2048),
    ext_id varchar(255),
    work_description varchar(2048),
    author_id int8,
    department_id int8,
    primary key (id)
);

create table estimate_devices (
    estimate_id int8 not null,
    devices_id int8 not null
);

create table estimate_materials (
    estimate_id int8 not null,
    materials_id int8 not null
);

create table estimate_works (
    estimate_id int8 not null,
    works_id int8 not null
);

create table material (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    dimension varchar(255),
    name varchar(255),
    note varchar(2048),
    price float8 not null,
    primary key (id)
);

create table materials_departments (
    material_id int8 not null,
    department_id int8 not null
);

create table orders (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    address varchar(255),
    customer varchar(255),
    ext_id varchar(255),
    verification_date timestamp,
    author_id int8,
    department_id int8,
    verification_name_id int8,
    primary key (id)
);

create table position_users (
    users_id int8 not null,
    position_id int8 not null
);

create table positions (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    name varchar(255),
    primary key (id)
);

create table roles (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    roles varchar(255),
    primary key (id)
);

create table users (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    email varchar(255),
    first_name varchar(255),
    last_name varchar(255),
    name varchar(255),
    password varchar(255),
    username varchar(255),
    department_id int8,
    primary key (id)
);

create table users_roles (
    user_id int8 not null,
    role_id int8 not null
);

create table work (
    id int8 generated by default as identity,
    created_date timestamp,
    status varchar(255),
    updated_date timestamp,
    dimension varchar(255),
    name varchar(255),
    note varchar(2048),
    price float8 not null,
    primary key (id)
);

create table works_departments (
    work_id int8 not null,
    department_id int8 not null
);

-- FK
alter table if exists devices_departments add constraint FK_device_departments foreign key (department_id) references department;
alter table if exists devices_departments add constraint FK_departments_device foreign key (device_id) references device;

alter table if exists estimate add constraint FK_estimate_author foreign key (author_id) references users;
alter table if exists estimate add constraint FK_estimate_departments foreign key (department_id) references department;

alter table if exists estimate_devices add constraint FK_estimate_devices foreign key (devices_id) references device;
alter table if exists estimate_devices add constraint FK_devices_estimate foreign key (estimate_id) references estimate;

alter table if exists estimate_materials add constraint FK_estimate_materials foreign key (materials_id) references material;
alter table if exists estimate_materials add constraint FK_materials_estimate foreign key (estimate_id) references estimate;

alter table if exists estimate_works add constraint FK_estimate_works foreign key (works_id) references work;
alter table if exists estimate_works add constraint FK_works_estimate foreign key (estimate_id) references estimate;

alter table if exists materials_departments add constraint FK_materials_department foreign key (department_id) references department;
alter table if exists materials_departments add constraint FK_department_materials foreign key (material_id) references material;

alter table if exists orders add constraint FK_order_author foreign key (author_id) references users;
alter table if exists orders add constraint FK_orders_departments foreign key (department_id) references department;
alter table if exists orders add constraint FK_orders_verification_name foreign key (verification_name_id) references users;

alter table if exists position_users add constraint FK_user_positions foreign key (position_id) references positions;
alter table if exists position_users add constraint FK_position_users foreign key (users_id) references users;

alter table if exists users add constraint FK_userDepartment foreign key (department_id) references department;

alter table if exists users_roles add constraint FK_users_roles foreign key (role_id) references roles;
alter table if exists users_roles add constraint FK_roles_users foreign key (user_id) references users;

alter table if exists works_departments add constraint FK_work_departments foreign key (department_id) references department;
alter table if exists works_departments add constraint FK_departments_work foreign key (work_id) references work;